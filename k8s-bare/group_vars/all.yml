# ansible configuration
ansible_connection: ssh
ansible_user: root
ansible_port: 22
ansible_ssh_private_key_file: '~/.ssh/id_rsa'
ansible_python_interpreter: /usr/bin/python3.6

# system time zone configuration
TimeZone: 'Asia/Shanghai'
kernel: true
ntp_server1: 'cn.pool.ntp.org'
ntp_server2: 'tw.pool.ntp.org'

swap: false

# openssl.cnf template
# if etcd or master needs extension, fill resevered IPs
# certSANs:
#   apiServer:
#     - 10.200.209.156
#     - 10.200.209.157
#   etcd:
#     - 10.200.209.158

SvcCIDR: 172.16.0.0/16
KubernetesClusterSVCIP: 172.16.0.1 # Used for Certificate SAN
ClusterDns: 172.16.0.10  # Userd for CoreDNS cluster IP
PodCIDR: 192.168.0.0/16
ServiceNodePortRange: 30000-32767
ClusterDomain: cluster.local

CLUSTER_NAME: 'kubernetes'
KUBE_VERSION: 'v1.14.1'
ETCD_version: 'v3.3.12'

# ApiServer high availability
VIP: '10.220.209.200'
KUBE_APISERVER: https://{% if groups['master'] | length !=1 %}{{ VIP }}:8443{% else %}{{ hostvars[groups['master'][0]].inventory_hostname }}:6443{% endif %}
VIP_NETMASK: 24
INTERFACE_NAME: ens160

# docker custom configuration
docker:
  version: '18.09.5'
  extendedVersion: '5:18.09.5~3-0~ubuntu-bionic'
  dataDir: /var/lib/docker
  execOpts:
    - 'native.cgroupdriver=systemd'

# etcd3 configuration
etcd:
  dataDir: /var/lib/etcd
  initialClusterToken: 'etcd-k8s-cluster'


# The following variables, address and bind, either bind to hosting single network by default
#  or changes to 0.0.0.0; healthz and metrics are the same
apiserver:
  advertiseAddress: "{{ inventory_hostname }}"
  bind: "{{ inventory_hostname }}"
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kube-apiserver
    logDir: /var/log/kubernetes/kube-apiserver
    logSize: 200M
    logRotate: 7

controllerManager:
  bind: 127.0.0.1
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kube-controller-manager
    logDir: /var/log/kubernetes/kube-controller-manager
    logSize: 200M
    logRotate: 7


scheduler:
  bind: 127.0.0.1
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kube-scheduler
    logDir: /var/log/kubernetes/kube-scheduler
    logSize: 200M
    logRotate: 7

# kube-proxy
proxy:
  bind: "{{ inventory_hostname }}"
  healthzBindAddress: "{{ inventory_hostname }}"
  metricsBindAddress: "{{ inventory_hostname }}"
  mode: ipvs  # proxy mode
  bin: true
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kube-proxy
    logDir: /var/log/kubernetes/kube-proxy
    logSize: 200M
    logRotate: 7

kubelet:
  bind: "{{ inventory_hostname }}"
  healthzBindAddress: "{{ inventory_hostname }}"
  swap: false  # if do not want to disable swap, setting it to true
  logLevel: 2
  logrotate:
    log: true
    confTemplate: logrotate/kubelet
    logDir: /var/log/kubernetes/kubelet
    logSize: 200M
    logRotate: 7
