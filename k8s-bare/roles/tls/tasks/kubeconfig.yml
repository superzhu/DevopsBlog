- name: Generate kubeconfig files for kube-scheduler,kube-controller-manager,admin,kube-proxy
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority=/etc/kubernetes/pki/ca.crt \
      --embed-certs=true \
      --server={{ KUBE_APISERVER  }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
    kubectl config set-credentials {{ item.KUBE_USER }} \
      --client-certificate=/etc/kubernetes/pki/{{ item.KUBE_CERT }}.crt \
      --client-key=/etc/kubernetes/pki/{{ item.KUBE_CERT }}.key \
      --embed-certs=true \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
    kubectl config set-context {{ item.KUBE_USER }}@{{ CLUSTER_NAME }} \
      --cluster={{ CLUSTER_NAME }} \
      --user={{ item.KUBE_USER }} \
      --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }}
    kubectl config use-context {{ item.KUBE_USER }}@{{ CLUSTER_NAME }} --kubeconfig=/etc/kubernetes/{{ item.KUBE_CONFIG }} 
  loop:
    - { KUBE_USER: 'system:kube-scheduler', KUBE_CERT: "kube-scheduler", KUBE_CONFIG: 'scheduler.kubeconfig' }
    - { KUBE_USER: 'system:kube-controller-manager', KUBE_CERT: "sa", KUBE_CONFIG: 'controller-manager.kubeconfig' }
    - { KUBE_USER: 'admin', KUBE_CERT: "admin", KUBE_CONFIG: 'admin.kubeconfig'}
    - { KUBE_USER: 'system:kube-proxy', KUBE_CERT: "kube-proxy", KUBE_CONFIG: 'kube-proxy.kubeconfig'}
