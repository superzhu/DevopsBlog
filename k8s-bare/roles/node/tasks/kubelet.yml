- name: Creating related folders
  file:
    name: "{{ item }}"
    state: directory
  loop:
    - /etc/kubernetes/manifests
    - /opt/cni/bin
    - /etc/cni/net.d
    - /var/lib/kubelet


- name: Distribute cni binary files
  unarchive:
    src: "{{ item }}"
    dest: /opt/cni/bin
    mode: u+x
  with_fileglob:
    - /home/plcm/kubernetes/cni-plugins-amd64-v0.7.5.tgz

- name: Distribute kublet binary file
  copy:
    src: "{{ item }}"
    dest: /usr/local/bin
    mode: preserve
  loop:
    - /home/plcm/kubernetes/kubelet

- name: Create kubelet log folder
  file:
    name: "{{ kubelet.logrotate.logDir }}/logrotate"
    state: directory
  when: kubelet.logrotate.log is defined and kubelet.logrotate.log 


- name: Render kublet logrotate configuration file
  template:
    src: "templates/{{ item }}"
    dest: "/etc/logrotate.d/{{ item.split('/')[-1] }}"
  loop:
    - "{{ kubelet.logrotate.confTemplate }}"
  when: kubelet.logrotate.log is defined and kubelet.logrotate.log

- name: Distribute kublet bootstrap kubeconfig file
  copy:
    src: "{{ item }}"
    dest: "{{ item }}"
  loop:
    - /etc/kubernetes/bootstrap.kubeconfig

- name: Get docker CgroupDriver value
  shell: |
    docker info --format '{% raw %}{{.CgroupDriver}}{% endraw %}'
  register: CgroupDriver

- name: kublet configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}/{{ item.src.split('.')[:-1]|join('.') }}"
  loop:
    - { src: 'kubelet.service.j2', dest: "/etc/systemd/system/" }
    - { src: 'kubelet-conf.yml.j2', dest: "/etc/kubernetes/" }


- name: enable and start kubelet
  systemd:
    name: kubelet
    state: stopped
    enabled: yes
    daemon_reload: yes
